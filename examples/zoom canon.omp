; OM File Header - Saved 2016/05/13 13:06:16
; (6.1001 :patc (om-make-point 442 10) (om-make-point 286 120) (om-make-point 478 436) "" 183 0 "2016/05/12 12:03:25" "2016/05/13 12:45:44")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-ModTile")))(setf *om-current-persistent* (om-load-patch1 "Patch 5" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 358 104) (quote "From a inner rhythm as a list of onsets (starting at 0) and an integer, zoom-canon returns two inner and outter rhythms (as a list of onsets starting at 0) that forms two different canons mod 2 that have the same donsets") nil (om-make-point 50 281) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-VIEW 2" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 250 205) (om-make-point 150 75) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 138 46) "untitled"))) (om-set-dialog-item-text rep "(0 1 4 5 6 7 10 11)
(0 2 6 10 12)
") rep) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-VIEW" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 70 204) (om-make-point 157 75) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 145 46) "untitled"))) (om-set-dialog-item-text rep "(0 4 6 10)
(0 1 2 3 6 7 10 11 12 13)
") rep) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 249 48) (om-make-point 17 30) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 160 48) (om-make-point 60 30) (list 0 2 3 5) "(0 2 3 5)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ZOOM-CANON" (quote zoom-canon) (quote ((om-load-inputfun (quote input-funbox) "A rhythm" "A" (list 0 1 2 3 4)) (om-load-inputfun (quote input-funbox) "An integer" "K" 2))) (om-make-point 205 121) nil nil nil nil 2))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((5 1 1 0 nil 0) (5 0 2 0 nil 0) (4 0 5 0 nil 0) (3 0 5 1 nil 0))) nil 6.1001))
