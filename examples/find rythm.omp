; OM File Header - Saved 2016/05/13 13:06:16
; (6.1001 :patc (om-make-point 118 10) (om-make-point 194 83) (om-make-point 439 362) "" 183 0 "2016/05/11 18:55:44" "2016/05/13 12:45:53")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-ModTile")))(setf *om-current-persistent* (om-load-patch1 "Patch 2" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 209 114) (quote "<- evaluate (v) will return the outter rythm as a list of onsets (starting at 0) such that inner and outter rhythms represent a compact rhythmic canon mod 2") nil (om-make-point 168 103) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 168 63) (quote "<- inner rhythm as a list of onsets (starting at 0)") nil (om-make-point 145 39) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-VIEW" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 81 172) (om-make-point 53 144) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 41 115) "untitled"))) (om-set-dialog-item-text rep "0
2
5
6
8
9
10
") rep) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 87 42) (om-make-point 49 30) (list 0 1 4) "(0 1 4)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FIND_RHYTHM_MOD_2" (quote find_rhythm_mod_2) (quote ((om-load-inputfun (quote input-funbox) "A rhythm" "A" (list 0 1 3)))) (om-make-point 49 92) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((4 0 2 0 nil 0) (3 0 4 0 nil 0))) nil 6.1001))
