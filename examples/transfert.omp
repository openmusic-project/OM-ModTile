; OM File Header - Saved 2016/05/13 13:06:19
; (6.100008 :patc (om-make-point 550 10) (om-make-point 759 49) (om-make-point 520 468) "" 183 0 "2016/05/12 12:12:27" "2016/05/13 13:06:19")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-ModTile")))(setf *om-current-persistent* (om-load-patch1 "transfert" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 409 79) (quote "From an inner rhythm as a list of onsets (starting at 0) and a suitable integers, transfert-transform returns two mod 2 canons twice as large as the one that can be created with the inner rhythme, that are different but have the same donsets") "" (om-make-point 60 370) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 146 139) (quote "<- from an inner rhythm as a list of onset (starting at 0) it returns all the possible intergers that allow a transfert transformation") "" (om-make-point 354 86) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-VIEW 3" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 293 280) (om-make-point 168 73) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 156 44) "untitled"))) (om-set-dialog-item-text rep "(0 1 2 4 6 7 8 9 13 15)
(0 3 4 5 8 9 10 13 14)
") rep) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-VIEW 2" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 38 279) (om-make-point 237 76) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 225 47) "untitled"))) (om-set-dialog-item-text rep "(0 1 2 4 6 7 8 9 10 11 12 13 14 18 20)
(0 3 4 5 8 9)
") rep) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 227 159) (om-make-point 21 36) 5 "5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-VIEW" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 273 150) (om-make-point 59 57) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 47 28) "untitled"))) (om-set-dialog-item-text rep "5") rep) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 149 40) (om-make-point 99 30) (list 0 1 2 4 5 8 10) "(0 1 2 4 5 8 10)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TRANSFERT-TRANSFORM" (quote transfert-transform) (quote ((om-load-inputfun (quote input-funbox) "A rhythm" "A" (list 0 1 2 3 4)) (om-load-inputfun (quote input-funbox) "An integer" "K" 2))) (om-make-point 159 210) nil nil nil nil 2))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "IS_TRANSFERABLE_P" (quote is_transferable_p) (quote ((om-load-inputfun (quote input-funbox) "A rhythm" "A" nil))) (om-make-point 253 78) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((7 1 2 0 nil 0) (7 0 3 0 nil 0) (8 0 5 0 nil 0) (6 0 7 0 nil 0) (4 0 7 1 nil 0) (6 0 8 0 nil 0))) nil 6.100008))
